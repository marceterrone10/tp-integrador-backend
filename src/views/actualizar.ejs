<%- include('partials/head') %> 
<div class="wrapper">
    <%- include('partials/nav') %>
    <main id="contenedor-get">

        <div id="getProduct-container" class="crudForm-container">
            <h2><%= tittle %></h2>

            <form id="getProduct-form">
                <label for="idProd">Id producto</label>
                <input type="number" name="idProd" id="idProd" required>
                <input type="submit" value="cambiar producto">
            </form>
        </div>

        <div id="getId-container">
            <ul id="getId-list">
            </ul>
        </div>

        <div id="updateForm"></div>
    </main>
        <script>
        let getId_lista = document.getElementById("getId-list");
        let getProduct_form = document.getElementById("getProduct-form");
        let updateForm = document.getElementById("updateForm");
        const url = "http://localhost:3000/api/"; // URL de la API

        getProduct_form.addEventListener("submit", async(event) => {
            event.preventDefault(); // evita que el formulario se envíe de forma tradicional

            // Como obtener la informacion del formulario en javascript

            try {

                // mostrar un estado de carga
                getId_lista.innerHTML = `<p class="loading">Cargando...</p>`;

                let formData = new FormData(event.target);
                //console.log(formData);

                // Aca convertimos el objeto formData en un objeto JS normal
                let data = Object.fromEntries(formData.entries());
                
                // Ahora si almacenamos el valor numerico del formulario para pasarselo a la peticion fetch
                let idProd = data.idProd.trim(); // trim() para eliminar posibles espacios en blanco
                console.log(idProd);

                let response = await fetch(`${url}productos/${idProd}`);

                // Validamos que el id sea un numero y no este vacio
                if(!idProd) {
                    throw new Error("Por favor, ingrese un ID de producto válido.");
                }

                // Manejamos error en una posible respuesta no exitosa
                if(!response.ok){
                    throw new Error(`Error al consultar el producto`);
                }; 

                let datos = await response.json();
                //console.log(datos);

                // Verificamos si el producto existe
                if(datos.payload.length === 0){
                    throw new Error("No se encontro el producto solicitado.");
                }


                let producto = datos.payload[0]; // Accedemos al primer elemento del array de productos
                mostrarProducto(producto); // Llamamos a la funcion para mostrar el producto
            } catch (error) {
                console.error("Error al consultar", error);
                getId_lista.innerHTML = `<p class="error">${error.message}</p>`; // Mostramos el error en la lista
            }
        });

        function mostrarProducto(producto){
            console.log(producto);

            let htmlProductos = `
                    <li class="producto-item">
                        <p>Id: ${producto.id} / Nombre: ${producto.nombre} / Marca: ${producto.marca} / Categoria: ${producto.categoria} / <strong>Precio: ${producto.precio}$</strong></p>
                        <img src="${producto.imagen}" alt="${producto.nombre}" class="producto-imagen">
                        <div class= "update-container">
                            <button id="updateBtn" data-id="${producto.id}">Actualizar Producto</button>
                        </div>
                    </li>
                `
            getId_lista.innerHTML = htmlProductos; // Actualizamos el contenido del ul con el nuevo producto consultado

            let updateProducto_button = document.getElementById("updateBtn");

            updateProducto_button.addEventListener("click", function(event){
                formularioUpdate(event, producto);
            })
        }

        function formularioUpdate(event, producto) {
            event.stopPropagation(); // Evita que el evento se propague
            console.table(producto);

            let updateProduct = `
            <div id="updateProductos-container" class="crudForm-container">
                <h2>Actualizar producto</h2>
                    <form autocomplete="off" id="updateProductos_form" >
                        <label for="categoryProd">Categoria</label>
                        <select name="categoria" id="categoryProd" required>
                            <option value="Indumentaria">Indumentaria</option>
                            <option value="Calzado">Calzado</option>
                            <option value="Accesorios">Accesorios</option>
                        </select>

                        <label for="marcaProd">Marca</label>
                        <input type="text" name="marca" id="marcaProd" required>

                        <label for="nombreProd">Nombre</label>
                        <input type="hidden" name="id" value="${producto.id}">
                        <input type="text" name="nombre" id="nombreProd" required>

                        <label for="precioProd">Precio</label>
                        <input type="number" name="precio" id="precioProd" required>

                        <label for="activo"> Activo </label>
                        <select name="activo" id="activo" required>
                            <option value="1">Si</option>
                            <option value="0">No</option>
                        </select>

                        <label for="imagenProd">Imagen</label>
                        <input type="text" name="imagen" id="imagenProd" required>

                        <input type="submit" value="crear-producto">
                    </form>
            </div>
            `

            updateForm.innerHTML = updateProduct; // Actualizamos el contenido del div con el formulario de actualización

            let updateProductos_form = document.getElementById("updateProductos_form");

            updateProductos_form.addEventListener("submit", function(event) {
                actualizarProducto(event);
            });

        }

        async function actualizarProducto(event) {
            event.preventDefault(); 

            let formData = new FormData(event.target);
            let data = Object.fromEntries(formData.entries());

            if(!data.nombre || !data.precio || !data.categoria || !data.activo || !data.imagen) {
                alert("Por favor, complete todos los campos.");
                return;
            }

            try {
                let response = await fetch(`${url}productos`, {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(data)

                });
                let result = await response.json();

                if(!response.ok) {
                    console.log("Error:", result.message);
                    alert("Error al actualizar el producto: " + result.message);
                    //vaciamos el form
                    getId_lista.innerHTML = ""; // Limpiamos la lista de productos consultados
                    updateForm.innerHTML = ""; // Limpiamos el formulario de actualización
                } else {
                    console.log("Producto actualizado correctamente");
                    alert("Producto actualizado correctamente");
                }
            } catch (error) {
                console.log("Error al actualizar el producto:", error);
                alert("Error al actualizar el producto. Por favor, intente nuevamente.");
            }   
        };
    </script>
<%- include('partials/footer') %>